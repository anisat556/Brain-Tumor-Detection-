{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":273402,"status":"ok","timestamp":1705711157888,"user":{"displayName":"ani sat","userId":"02985735554015643274"},"user_tz":420},"id":"b76652cf","outputId":"bb2a8f3e-238e-45d0-bb56-16c4cd4702a4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]},{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":1}],"source":["\n","from google.colab import drive\n","drive.mount('/content/drive')\n","[]"],"id":"b76652cf"},{"cell_type":"code","execution_count":null,"metadata":{"id":"78ae10bb"},"outputs":[],"source":["\n","# Please replace the brackets below with the drive location of your folders which included subfolders for images\n","# Sample path: /content/drive/My Drive/ImageClassification\n","TRAINING_PATH = '/content/drive/Shareddrives/1:1_Anisha/Data/Train'\n","VALIDATION_PATH = '/content/drive/Shareddrives/1:1_Anisha/Data/Validation'"],"id":"78ae10bb"},{"cell_type":"code","execution_count":null,"metadata":{"id":"0bcb8666"},"outputs":[],"source":["def create_model(base_model, num_classes):\n","    import tensorflow as tf\n","    # Grab the last layer and add a few extra layers to it\n","    x=base_model.output\n","    x=GlobalAveragePooling2D()(x)\n","    # Dense layer 1\n","    x=tf.keras.layers.Dense(100,activation='relu', kernel_initializer=tf.keras.initializers.VarianceScaling(), use_bias=True)(x)\n","\n","    # Final layer with softmax activation\n","    preds=tf.keras.layers.Dense(num_classes,activation='softmax', kernel_initializer=tf.keras.initializers.VarianceScaling(), use_bias=False)(x)\n","\n","    # Create the final model\n","    model=Model(inputs=base_model.input,outputs=preds)\n","    return model\n"],"id":"0bcb8666"},{"cell_type":"code","execution_count":null,"metadata":{"id":"a7733499"},"outputs":[],"source":["def get_optimizer(optimizer_name, learning_rate):\n","    # Import keras optimizers\n","    from tensorflow.keras.optimizers import Adam, Adadelta, Adagrad, Adamax, Ftrl, Nadam, RMSprop, SGD\n","    print('Selected Optimizer', optimizer_name)\n","    switcher = {\n","        'Adadelta': Adadelta(learning_rate=learning_rate),\n","        'Adagrad': Adagrad(learning_rate=learning_rate),\n","        'Adam': Adam(learning_rate=learning_rate),\n","        'Adamax': Adamax(learning_rate=learning_rate),\n","        'FTRL': Ftrl(learning_rate=learning_rate),\n","        'NAdam': Nadam(learning_rate=learning_rate),\n","        'RMSprop': RMSprop(learning_rate=learning_rate),\n","        'Gradient Descent': SGD(learning_rate=learning_rate)\n","    }\n","    # If optimizer_name is empty, Adam will be return as default optimizer\n","    return switcher.get(optimizer_name, Adam(learning_rate=learning_rate))\n"],"id":"a7733499"},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e1978032","executionInfo":{"status":"ok","timestamp":1705716380911,"user_tz":420,"elapsed":5223026,"user":{"displayName":"ani sat","userId":"02985735554015643274"}},"outputId":"fd08a4b9-b054-45c6-f019-2b7cef0cf09d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Found 16440 images belonging to 4 classes.\n","Found 2160 images belonging to 4 classes.\n","dict_keys(['Normal', 'glioma_tumor', 'meningioma_tumor', 'pituitary_tumor'])\n","Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\n","94765736/94765736 [==============================] - 1s 0us/step\n","175\n","Selected Optimizer Adam\n","Epoch 1/10\n","514/514 [==============================] - 4215s 8s/step - loss: 0.9324 - accuracy: 0.6134 - val_loss: 0.7994 - val_accuracy: 0.6537\n","Epoch 2/10\n","514/514 [==============================] - 90s 175ms/step - loss: 0.7480 - accuracy: 0.6992 - val_loss: 0.6781 - val_accuracy: 0.7250\n","Epoch 3/10\n","514/514 [==============================] - 90s 175ms/step - loss: 0.6726 - accuracy: 0.7299 - val_loss: 0.6178 - val_accuracy: 0.7583\n","Epoch 4/10\n","514/514 [==============================] - 92s 178ms/step - loss: 0.6060 - accuracy: 0.7603 - val_loss: 0.5934 - val_accuracy: 0.7713\n","Epoch 5/10\n","514/514 [==============================] - 93s 180ms/step - loss: 0.5661 - accuracy: 0.7782 - val_loss: 0.5254 - val_accuracy: 0.7968\n","Epoch 6/10\n","514/514 [==============================] - 91s 178ms/step - loss: 0.5275 - accuracy: 0.7897 - val_loss: 0.5239 - val_accuracy: 0.7907\n","Epoch 7/10\n","514/514 [==============================] - 93s 180ms/step - loss: 0.5038 - accuracy: 0.7993 - val_loss: 0.5037 - val_accuracy: 0.7852\n","Epoch 8/10\n","514/514 [==============================] - 108s 209ms/step - loss: 0.4774 - accuracy: 0.8130 - val_loss: 0.4947 - val_accuracy: 0.8074\n","Epoch 9/10\n","514/514 [==============================] - 105s 204ms/step - loss: 0.4535 - accuracy: 0.8217 - val_loss: 0.4576 - val_accuracy: 0.8153\n","Epoch 10/10\n","514/514 [==============================] - 94s 183ms/step - loss: 0.4333 - accuracy: 0.8299 - val_loss: 0.4568 - val_accuracy: 0.8148\n"]}],"source":["\n","# Import packages needed to create a image classification model\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import os\n","import tensorflow as tf\n","\n","from keras.applications.mobilenet_v2 import preprocess_input\n","from keras.preprocessing.image import ImageDataGenerator\n","from keras.layers import Dense,GlobalAveragePooling2D\n","from keras.models import Model\n","from tensorflow.keras import regularizers\n","\n","from tensorflow.keras.preprocessing import image_dataset_from_directory\n","from keras.callbacks import EarlyStopping\n","from tensorflow import keras\n","\n","# Initialize hyper params\n","epochs = 10 #<-- increase for higher accuracy\n","base_learning_rate = 0.001 #decrease for different results; use excel sheet to note down results from each change to learning rate and epochs\n","optimizer = 'Adam'\n","BATCH_SIZE = 32\n","\n","IMG_SIZE = (224, 224)\n","\n","# Create the data generation pipeline for training and validation\n","train_datagen = ImageDataGenerator(preprocessing_function=preprocess_input)\n","validation_datagen = ImageDataGenerator(preprocessing_function=preprocess_input)\n","\n","train_generator = train_datagen.flow_from_directory(TRAINING_PATH,\n","                                                target_size=IMG_SIZE,\n","                                                color_mode='rgb',\n","                                                batch_size=BATCH_SIZE,\n","                                                class_mode='categorical',\n","                                                shuffle=True,\n","                                                )\n","validation_generator = validation_datagen.flow_from_directory(VALIDATION_PATH,\n","                                                target_size=IMG_SIZE,\n","                                                color_mode='rgb',\n","                                                batch_size=BATCH_SIZE,\n","                                                class_mode='categorical',\n","                                                shuffle=True,\n","                                                )\n","\n","print(validation_generator.class_indices.keys())\n","# Download the model\n","base_model = tf.keras.applications.ResNet50(input_shape=(224, 224, 3), include_top=False, weights='imagenet')\n","for layer in base_model.layers:\n","    layer.trainable=False\n","\n","# Specify the number of classes\n","num_classes = 4\n","\n","# Create the base model\n","model = create_model(base_model,num_classes)\n","\n","print(len(base_model.layers))\n","\n","model.compile(optimizer = get_optimizer(optimizer_name=optimizer,learning_rate=base_learning_rate),loss='CategoricalCrossentropy',metrics=['accuracy'])\n","# Adam optimizer\n","# loss function will be categorical cross entropy\n","# evaluation metric will be accuracy\n","\n","early_stopping_monitor = EarlyStopping(\n","    monitor='val_loss',\n","    min_delta=0,\n","    patience=30,\n","    verbose=0,\n","    mode='auto',\n","    baseline=None,\n","    restore_best_weights=True\n",")\n","\n","step_size_train = train_generator.n//train_generator.batch_size\n","history_fine = model.fit(train_generator,\n","                        epochs=epochs,\n","                        validation_data = validation_generator,\n","                        verbose=1)"],"id":"e1978032"},{"cell_type":"code","source":["model.summary()"],"metadata":{"id":"uTnt0cJVrjST","executionInfo":{"status":"ok","timestamp":1705716384920,"user_tz":420,"elapsed":4026,"user":{"displayName":"ani sat","userId":"02985735554015643274"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"6edc3cad-b618-4d67-bc8b-502484f5bbca"},"id":"uTnt0cJVrjST","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                Output Shape                 Param #   Connected to                  \n","==================================================================================================\n"," input_1 (InputLayer)        [(None, 224, 224, 3)]        0         []                            \n","                                                                                                  \n"," conv1_pad (ZeroPadding2D)   (None, 230, 230, 3)          0         ['input_1[0][0]']             \n","                                                                                                  \n"," conv1_conv (Conv2D)         (None, 112, 112, 64)         9472      ['conv1_pad[0][0]']           \n","                                                                                                  \n"," conv1_bn (BatchNormalizati  (None, 112, 112, 64)         256       ['conv1_conv[0][0]']          \n"," on)                                                                                              \n","                                                                                                  \n"," conv1_relu (Activation)     (None, 112, 112, 64)         0         ['conv1_bn[0][0]']            \n","                                                                                                  \n"," pool1_pad (ZeroPadding2D)   (None, 114, 114, 64)         0         ['conv1_relu[0][0]']          \n","                                                                                                  \n"," pool1_pool (MaxPooling2D)   (None, 56, 56, 64)           0         ['pool1_pad[0][0]']           \n","                                                                                                  \n"," conv2_block1_1_conv (Conv2  (None, 56, 56, 64)           4160      ['pool1_pool[0][0]']          \n"," D)                                                                                               \n","                                                                                                  \n"," conv2_block1_1_bn (BatchNo  (None, 56, 56, 64)           256       ['conv2_block1_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv2_block1_1_relu (Activ  (None, 56, 56, 64)           0         ['conv2_block1_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv2_block1_2_conv (Conv2  (None, 56, 56, 64)           36928     ['conv2_block1_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv2_block1_2_bn (BatchNo  (None, 56, 56, 64)           256       ['conv2_block1_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv2_block1_2_relu (Activ  (None, 56, 56, 64)           0         ['conv2_block1_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv2_block1_0_conv (Conv2  (None, 56, 56, 256)          16640     ['pool1_pool[0][0]']          \n"," D)                                                                                               \n","                                                                                                  \n"," conv2_block1_3_conv (Conv2  (None, 56, 56, 256)          16640     ['conv2_block1_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv2_block1_0_bn (BatchNo  (None, 56, 56, 256)          1024      ['conv2_block1_0_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv2_block1_3_bn (BatchNo  (None, 56, 56, 256)          1024      ['conv2_block1_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv2_block1_add (Add)      (None, 56, 56, 256)          0         ['conv2_block1_0_bn[0][0]',   \n","                                                                     'conv2_block1_3_bn[0][0]']   \n","                                                                                                  \n"," conv2_block1_out (Activati  (None, 56, 56, 256)          0         ['conv2_block1_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv2_block2_1_conv (Conv2  (None, 56, 56, 64)           16448     ['conv2_block1_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv2_block2_1_bn (BatchNo  (None, 56, 56, 64)           256       ['conv2_block2_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv2_block2_1_relu (Activ  (None, 56, 56, 64)           0         ['conv2_block2_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv2_block2_2_conv (Conv2  (None, 56, 56, 64)           36928     ['conv2_block2_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv2_block2_2_bn (BatchNo  (None, 56, 56, 64)           256       ['conv2_block2_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv2_block2_2_relu (Activ  (None, 56, 56, 64)           0         ['conv2_block2_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv2_block2_3_conv (Conv2  (None, 56, 56, 256)          16640     ['conv2_block2_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv2_block2_3_bn (BatchNo  (None, 56, 56, 256)          1024      ['conv2_block2_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv2_block2_add (Add)      (None, 56, 56, 256)          0         ['conv2_block1_out[0][0]',    \n","                                                                     'conv2_block2_3_bn[0][0]']   \n","                                                                                                  \n"," conv2_block2_out (Activati  (None, 56, 56, 256)          0         ['conv2_block2_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv2_block3_1_conv (Conv2  (None, 56, 56, 64)           16448     ['conv2_block2_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv2_block3_1_bn (BatchNo  (None, 56, 56, 64)           256       ['conv2_block3_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv2_block3_1_relu (Activ  (None, 56, 56, 64)           0         ['conv2_block3_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv2_block3_2_conv (Conv2  (None, 56, 56, 64)           36928     ['conv2_block3_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv2_block3_2_bn (BatchNo  (None, 56, 56, 64)           256       ['conv2_block3_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv2_block3_2_relu (Activ  (None, 56, 56, 64)           0         ['conv2_block3_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv2_block3_3_conv (Conv2  (None, 56, 56, 256)          16640     ['conv2_block3_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv2_block3_3_bn (BatchNo  (None, 56, 56, 256)          1024      ['conv2_block3_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv2_block3_add (Add)      (None, 56, 56, 256)          0         ['conv2_block2_out[0][0]',    \n","                                                                     'conv2_block3_3_bn[0][0]']   \n","                                                                                                  \n"," conv2_block3_out (Activati  (None, 56, 56, 256)          0         ['conv2_block3_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv3_block1_1_conv (Conv2  (None, 28, 28, 128)          32896     ['conv2_block3_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block1_1_bn (BatchNo  (None, 28, 28, 128)          512       ['conv3_block1_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block1_1_relu (Activ  (None, 28, 28, 128)          0         ['conv3_block1_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv3_block1_2_conv (Conv2  (None, 28, 28, 128)          147584    ['conv3_block1_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block1_2_bn (BatchNo  (None, 28, 28, 128)          512       ['conv3_block1_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block1_2_relu (Activ  (None, 28, 28, 128)          0         ['conv3_block1_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv3_block1_0_conv (Conv2  (None, 28, 28, 512)          131584    ['conv2_block3_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block1_3_conv (Conv2  (None, 28, 28, 512)          66048     ['conv3_block1_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block1_0_bn (BatchNo  (None, 28, 28, 512)          2048      ['conv3_block1_0_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block1_3_bn (BatchNo  (None, 28, 28, 512)          2048      ['conv3_block1_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block1_add (Add)      (None, 28, 28, 512)          0         ['conv3_block1_0_bn[0][0]',   \n","                                                                     'conv3_block1_3_bn[0][0]']   \n","                                                                                                  \n"," conv3_block1_out (Activati  (None, 28, 28, 512)          0         ['conv3_block1_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv3_block2_1_conv (Conv2  (None, 28, 28, 128)          65664     ['conv3_block1_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block2_1_bn (BatchNo  (None, 28, 28, 128)          512       ['conv3_block2_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block2_1_relu (Activ  (None, 28, 28, 128)          0         ['conv3_block2_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv3_block2_2_conv (Conv2  (None, 28, 28, 128)          147584    ['conv3_block2_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block2_2_bn (BatchNo  (None, 28, 28, 128)          512       ['conv3_block2_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block2_2_relu (Activ  (None, 28, 28, 128)          0         ['conv3_block2_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv3_block2_3_conv (Conv2  (None, 28, 28, 512)          66048     ['conv3_block2_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block2_3_bn (BatchNo  (None, 28, 28, 512)          2048      ['conv3_block2_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block2_add (Add)      (None, 28, 28, 512)          0         ['conv3_block1_out[0][0]',    \n","                                                                     'conv3_block2_3_bn[0][0]']   \n","                                                                                                  \n"," conv3_block2_out (Activati  (None, 28, 28, 512)          0         ['conv3_block2_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv3_block3_1_conv (Conv2  (None, 28, 28, 128)          65664     ['conv3_block2_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block3_1_bn (BatchNo  (None, 28, 28, 128)          512       ['conv3_block3_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block3_1_relu (Activ  (None, 28, 28, 128)          0         ['conv3_block3_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv3_block3_2_conv (Conv2  (None, 28, 28, 128)          147584    ['conv3_block3_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block3_2_bn (BatchNo  (None, 28, 28, 128)          512       ['conv3_block3_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block3_2_relu (Activ  (None, 28, 28, 128)          0         ['conv3_block3_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv3_block3_3_conv (Conv2  (None, 28, 28, 512)          66048     ['conv3_block3_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block3_3_bn (BatchNo  (None, 28, 28, 512)          2048      ['conv3_block3_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block3_add (Add)      (None, 28, 28, 512)          0         ['conv3_block2_out[0][0]',    \n","                                                                     'conv3_block3_3_bn[0][0]']   \n","                                                                                                  \n"," conv3_block3_out (Activati  (None, 28, 28, 512)          0         ['conv3_block3_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv3_block4_1_conv (Conv2  (None, 28, 28, 128)          65664     ['conv3_block3_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block4_1_bn (BatchNo  (None, 28, 28, 128)          512       ['conv3_block4_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block4_1_relu (Activ  (None, 28, 28, 128)          0         ['conv3_block4_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv3_block4_2_conv (Conv2  (None, 28, 28, 128)          147584    ['conv3_block4_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block4_2_bn (BatchNo  (None, 28, 28, 128)          512       ['conv3_block4_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block4_2_relu (Activ  (None, 28, 28, 128)          0         ['conv3_block4_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv3_block4_3_conv (Conv2  (None, 28, 28, 512)          66048     ['conv3_block4_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv3_block4_3_bn (BatchNo  (None, 28, 28, 512)          2048      ['conv3_block4_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv3_block4_add (Add)      (None, 28, 28, 512)          0         ['conv3_block3_out[0][0]',    \n","                                                                     'conv3_block4_3_bn[0][0]']   \n","                                                                                                  \n"," conv3_block4_out (Activati  (None, 28, 28, 512)          0         ['conv3_block4_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv4_block1_1_conv (Conv2  (None, 14, 14, 256)          131328    ['conv3_block4_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block1_1_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block1_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block1_1_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block1_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block1_2_conv (Conv2  (None, 14, 14, 256)          590080    ['conv4_block1_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block1_2_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block1_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block1_2_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block1_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block1_0_conv (Conv2  (None, 14, 14, 1024)         525312    ['conv3_block4_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block1_3_conv (Conv2  (None, 14, 14, 1024)         263168    ['conv4_block1_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block1_0_bn (BatchNo  (None, 14, 14, 1024)         4096      ['conv4_block1_0_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block1_3_bn (BatchNo  (None, 14, 14, 1024)         4096      ['conv4_block1_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block1_add (Add)      (None, 14, 14, 1024)         0         ['conv4_block1_0_bn[0][0]',   \n","                                                                     'conv4_block1_3_bn[0][0]']   \n","                                                                                                  \n"," conv4_block1_out (Activati  (None, 14, 14, 1024)         0         ['conv4_block1_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv4_block2_1_conv (Conv2  (None, 14, 14, 256)          262400    ['conv4_block1_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block2_1_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block2_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block2_1_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block2_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block2_2_conv (Conv2  (None, 14, 14, 256)          590080    ['conv4_block2_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block2_2_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block2_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block2_2_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block2_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block2_3_conv (Conv2  (None, 14, 14, 1024)         263168    ['conv4_block2_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block2_3_bn (BatchNo  (None, 14, 14, 1024)         4096      ['conv4_block2_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block2_add (Add)      (None, 14, 14, 1024)         0         ['conv4_block1_out[0][0]',    \n","                                                                     'conv4_block2_3_bn[0][0]']   \n","                                                                                                  \n"," conv4_block2_out (Activati  (None, 14, 14, 1024)         0         ['conv4_block2_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv4_block3_1_conv (Conv2  (None, 14, 14, 256)          262400    ['conv4_block2_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block3_1_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block3_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block3_1_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block3_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block3_2_conv (Conv2  (None, 14, 14, 256)          590080    ['conv4_block3_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block3_2_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block3_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block3_2_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block3_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block3_3_conv (Conv2  (None, 14, 14, 1024)         263168    ['conv4_block3_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block3_3_bn (BatchNo  (None, 14, 14, 1024)         4096      ['conv4_block3_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block3_add (Add)      (None, 14, 14, 1024)         0         ['conv4_block2_out[0][0]',    \n","                                                                     'conv4_block3_3_bn[0][0]']   \n","                                                                                                  \n"," conv4_block3_out (Activati  (None, 14, 14, 1024)         0         ['conv4_block3_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv4_block4_1_conv (Conv2  (None, 14, 14, 256)          262400    ['conv4_block3_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block4_1_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block4_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block4_1_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block4_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block4_2_conv (Conv2  (None, 14, 14, 256)          590080    ['conv4_block4_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block4_2_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block4_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block4_2_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block4_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block4_3_conv (Conv2  (None, 14, 14, 1024)         263168    ['conv4_block4_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block4_3_bn (BatchNo  (None, 14, 14, 1024)         4096      ['conv4_block4_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block4_add (Add)      (None, 14, 14, 1024)         0         ['conv4_block3_out[0][0]',    \n","                                                                     'conv4_block4_3_bn[0][0]']   \n","                                                                                                  \n"," conv4_block4_out (Activati  (None, 14, 14, 1024)         0         ['conv4_block4_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv4_block5_1_conv (Conv2  (None, 14, 14, 256)          262400    ['conv4_block4_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block5_1_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block5_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block5_1_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block5_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block5_2_conv (Conv2  (None, 14, 14, 256)          590080    ['conv4_block5_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block5_2_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block5_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block5_2_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block5_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block5_3_conv (Conv2  (None, 14, 14, 1024)         263168    ['conv4_block5_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block5_3_bn (BatchNo  (None, 14, 14, 1024)         4096      ['conv4_block5_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block5_add (Add)      (None, 14, 14, 1024)         0         ['conv4_block4_out[0][0]',    \n","                                                                     'conv4_block5_3_bn[0][0]']   \n","                                                                                                  \n"," conv4_block5_out (Activati  (None, 14, 14, 1024)         0         ['conv4_block5_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv4_block6_1_conv (Conv2  (None, 14, 14, 256)          262400    ['conv4_block5_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block6_1_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block6_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block6_1_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block6_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block6_2_conv (Conv2  (None, 14, 14, 256)          590080    ['conv4_block6_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block6_2_bn (BatchNo  (None, 14, 14, 256)          1024      ['conv4_block6_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block6_2_relu (Activ  (None, 14, 14, 256)          0         ['conv4_block6_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv4_block6_3_conv (Conv2  (None, 14, 14, 1024)         263168    ['conv4_block6_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv4_block6_3_bn (BatchNo  (None, 14, 14, 1024)         4096      ['conv4_block6_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv4_block6_add (Add)      (None, 14, 14, 1024)         0         ['conv4_block5_out[0][0]',    \n","                                                                     'conv4_block6_3_bn[0][0]']   \n","                                                                                                  \n"," conv4_block6_out (Activati  (None, 14, 14, 1024)         0         ['conv4_block6_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv5_block1_1_conv (Conv2  (None, 7, 7, 512)            524800    ['conv4_block6_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv5_block1_1_bn (BatchNo  (None, 7, 7, 512)            2048      ['conv5_block1_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv5_block1_1_relu (Activ  (None, 7, 7, 512)            0         ['conv5_block1_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv5_block1_2_conv (Conv2  (None, 7, 7, 512)            2359808   ['conv5_block1_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv5_block1_2_bn (BatchNo  (None, 7, 7, 512)            2048      ['conv5_block1_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv5_block1_2_relu (Activ  (None, 7, 7, 512)            0         ['conv5_block1_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv5_block1_0_conv (Conv2  (None, 7, 7, 2048)           2099200   ['conv4_block6_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv5_block1_3_conv (Conv2  (None, 7, 7, 2048)           1050624   ['conv5_block1_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv5_block1_0_bn (BatchNo  (None, 7, 7, 2048)           8192      ['conv5_block1_0_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv5_block1_3_bn (BatchNo  (None, 7, 7, 2048)           8192      ['conv5_block1_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv5_block1_add (Add)      (None, 7, 7, 2048)           0         ['conv5_block1_0_bn[0][0]',   \n","                                                                     'conv5_block1_3_bn[0][0]']   \n","                                                                                                  \n"," conv5_block1_out (Activati  (None, 7, 7, 2048)           0         ['conv5_block1_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv5_block2_1_conv (Conv2  (None, 7, 7, 512)            1049088   ['conv5_block1_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv5_block2_1_bn (BatchNo  (None, 7, 7, 512)            2048      ['conv5_block2_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv5_block2_1_relu (Activ  (None, 7, 7, 512)            0         ['conv5_block2_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv5_block2_2_conv (Conv2  (None, 7, 7, 512)            2359808   ['conv5_block2_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv5_block2_2_bn (BatchNo  (None, 7, 7, 512)            2048      ['conv5_block2_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv5_block2_2_relu (Activ  (None, 7, 7, 512)            0         ['conv5_block2_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv5_block2_3_conv (Conv2  (None, 7, 7, 2048)           1050624   ['conv5_block2_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv5_block2_3_bn (BatchNo  (None, 7, 7, 2048)           8192      ['conv5_block2_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv5_block2_add (Add)      (None, 7, 7, 2048)           0         ['conv5_block1_out[0][0]',    \n","                                                                     'conv5_block2_3_bn[0][0]']   \n","                                                                                                  \n"," conv5_block2_out (Activati  (None, 7, 7, 2048)           0         ['conv5_block2_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," conv5_block3_1_conv (Conv2  (None, 7, 7, 512)            1049088   ['conv5_block2_out[0][0]']    \n"," D)                                                                                               \n","                                                                                                  \n"," conv5_block3_1_bn (BatchNo  (None, 7, 7, 512)            2048      ['conv5_block3_1_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv5_block3_1_relu (Activ  (None, 7, 7, 512)            0         ['conv5_block3_1_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv5_block3_2_conv (Conv2  (None, 7, 7, 512)            2359808   ['conv5_block3_1_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv5_block3_2_bn (BatchNo  (None, 7, 7, 512)            2048      ['conv5_block3_2_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv5_block3_2_relu (Activ  (None, 7, 7, 512)            0         ['conv5_block3_2_bn[0][0]']   \n"," ation)                                                                                           \n","                                                                                                  \n"," conv5_block3_3_conv (Conv2  (None, 7, 7, 2048)           1050624   ['conv5_block3_2_relu[0][0]'] \n"," D)                                                                                               \n","                                                                                                  \n"," conv5_block3_3_bn (BatchNo  (None, 7, 7, 2048)           8192      ['conv5_block3_3_conv[0][0]'] \n"," rmalization)                                                                                     \n","                                                                                                  \n"," conv5_block3_add (Add)      (None, 7, 7, 2048)           0         ['conv5_block2_out[0][0]',    \n","                                                                     'conv5_block3_3_bn[0][0]']   \n","                                                                                                  \n"," conv5_block3_out (Activati  (None, 7, 7, 2048)           0         ['conv5_block3_add[0][0]']    \n"," on)                                                                                              \n","                                                                                                  \n"," global_average_pooling2d (  (None, 2048)                 0         ['conv5_block3_out[0][0]']    \n"," GlobalAveragePooling2D)                                                                          \n","                                                                                                  \n"," dense (Dense)               (None, 100)                  204900    ['global_average_pooling2d[0][\n","                                                                    0]']                          \n","                                                                                                  \n"," dense_1 (Dense)             (None, 4)                    400       ['dense[0][0]']               \n","                                                                                                  \n","==================================================================================================\n","Total params: 23793012 (90.76 MB)\n","Trainable params: 205300 (801.95 KB)\n","Non-trainable params: 23587712 (89.98 MB)\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VIV_LOPybQWa","executionInfo":{"status":"ok","timestamp":1705716384921,"user_tz":420,"elapsed":15,"user":{"displayName":"ani sat","userId":"02985735554015643274"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"8e6204ab-1c1e-45c3-a0df-9f36b0f4a50b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAp8AAAKqCAYAAAB8XzUWAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAByN0lEQVR4nO3deZiN9f/H8deZwSzGDAZjabLLEoaxZKeUKEWFkC1KC5ISKluqSVoklUi0iVSqb4tCylp22cleGNlm7MPM/fvj85szjhnMet9nZp6P6zpX59znPud+n5kz9eqzuizLsgQAAADYwMfpAgAAAJB7ED4BAABgG8InAAAAbEP4BAAAgG0InwAAALAN4RMAAAC2IXwCAADANoRPAAAA2IbwCQAAANsQPoEr2LNnj1wul6ZPn+50KVflcrk0atQop8vwsHLlSjVs2FD58+eXy+XSunXrHKtl1KhRcrlc6Xrt9OnT5XK5tGfPnswtyss49R0qU6aMevbs6X7822+/yeVy6bfffrvma5s3b67mzZtnaj0Z+a5klDf+HQNZhfCJXCkxVKxatcrpUhyzefNmjRo1KtOD1YULF9ShQwcdO3ZMb775pj755BOVLl062XllypSRy+W65s3bw39u8MYbb8jlcmn+/PlXPGfKlClyuVz67rvvbKws7c6cOaNRo0alKuACyBp5nC4A8FalS5fW2bNnlTdvXqdLyRKbN2/W6NGj1bx5c5UpUybT3nfnzp3au3evpkyZoj59+lzxvPHjx+vUqVPuxz/++KM+//xzvfnmmypSpIj7eMOGDTNUz/PPP6+hQ4em67XdunXT/fffLz8/vwzVkN3df//9Gjx4sGbMmKGWLVumeM6MGTMUGhqq1q1bp/s6TZs21dmzZ5UvX750v8e1nDlzRqNHj5akZC2nGfmuAEg9widwBS6XS/7+/k6Xke0cPnxYklSwYMGrnteuXTuPx4cOHdLnn3+udu3aXTUMnz59Wvnz5091PXny5FGePOn7V52vr698fX3T9dqcpGTJkmrRooW+/vprvffee8nC+L///qtFixbp4YcfztD/rPn4+Dj6N5eR7wqA1KPbHbiClMZ89uzZU0FBQfr333/Vrl07BQUFqWjRonr66acVHx/v8fqEhASNHz9e1apVk7+/v8LCwtS3b18dP378mtdOvM6uXbvUqlUr5c+fXyVLltQLL7wgy7Ku+fq1a9eqdevWCg4OVlBQkG655Rb98ccf7uenT5+uDh06SJJatGjh7uK+Vlfkr7/+qiZNmih//vwqWLCg7r77bm3ZssWj7mbNmkmSOnToIJfLlaFxeYk/h507d6pNmzYqUKCAunbtKklavHixOnTooOuvv15+fn4KDw/Xk08+qbNnz3q8R0rj+Fwul/r166dvvvlGN954o/z8/FStWjXNnTvX47yUxnyWKVNGd955p5YsWaJ69erJ399f5cqV08cff5ys/r/++kvNmjVTQECArrvuOr344ouaNm1aqsaR/vXXX+rZs6fKlSsnf39/FS9eXA8++KCOHj2a4uf7+++/1bNnTxUsWFAhISHq1auXzpw543Hu+fPn9eSTT6po0aIqUKCA7rrrLv3zzz9XrSPRAw88oJiYGP3www/Jnps5c6YSEhLcv5vXXntNDRs2VGhoqAICAhQZGakvv/zymte40pjPyZMnq3z58goICFC9evW0ePHiZK+Ni4vTiBEjFBkZqZCQEOXPn19NmjTRwoUL3efs2bNHRYsWlSSNHj3a/b1PHGuZ0nfl4sWLGjNmjMqXLy8/Pz+VKVNGzz77rM6fP+9xXlq+F6l1rb9jyQxzGT16tCpWrCh/f3+FhoaqcePGmjdvnvucQ4cOqVevXrruuuvk5+enEiVK6O67787xY5nhvfhfPCCN4uPj1apVK9WvX1+vvfaa5s+fr9dff13ly5fXo48+6j6vb9++mj59unr16qUBAwZo9+7dmjhxotauXaulS5des4UoPj5et99+u2666Sa9+uqrmjt3rkaOHKmLFy/qhRdeuOLrNm3apCZNmig4OFjPPPOM8ubNq/fff1/NmzfX77//rvr166tp06YaMGCAJkyYoGeffVZVqlSRJPc/UzJ//ny1bt1a5cqV06hRo3T27Fm9/fbbatSokdasWaMyZcqob9++KlWqlF5++WUNGDBAdevWVVhYWBp/wp4uXryoVq1aqXHjxnrttdcUGBgoSZo9e7bOnDmjRx99VKGhoVqxYoXefvtt/fPPP5o9e/Y133fJkiX6+uuv9dhjj6lAgQKaMGGC7r33Xu3bt0+hoaFXfe3ff/+t++67T71791aPHj304YcfqmfPnoqMjFS1atUkmdbAxGA/bNgw5c+fXx988EGqu/DnzZunXbt2qVevXipevLg2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Dx6sYsWKydfXV1FRUdq5c2eG3ju1C8/b8Tu4XNOmTbVz5059++23+uWXX/TBBx/ozTff1KRJk9xLnQ0cOFBt27bVN998o59//lnDhw9XVFSUfv31V9WqVSvLagOuhPAJZIHy5ctr/vz5atSokUcXZFokJCRo165d7tZOSdq+fbskXXGSQNGiRRUYGKht27Yle27r1q3y8fFxT9JIy04uiYvEX+l9ixQpkqbljzJqw4YN2r59uz766CN1797dffzSGb5OK126tP7+++9kx1M6drnjx49rwYIFGj16tEaMGOE+fqWu1dTWk5CQoJ07d3q0qKX0O72arl27atKkSZo1a5Z2794tl8ulzp07u5//6quv5O/vr59//tljctW0adPSVbNkPvfNN9/sPn7hwgXt3r1bNWvWdB/78ssvVa5cOX399dce3+2RI0d6vGdav/cJCQnasWOHx2S86OhonThxIsXNEzJDWv6OJTOco1evXurVq5dOnTqlpk2batSoUR7r7JYvX15PPfWUnnrqKe3YsUMRERF6/fXX9emnn2bJZwCuhm53IAt07NhR8fHxGjNmTLLnLl68qBMnTqTqfSZOnOi+b1mWJk6cqLx58+qWW25J8XxfX1/ddttt+vbbbz265qOjozVjxgw1btxYwcHBkuQOi6mppUSJEoqIiNBHH33kcf7GjRv1yy+/qE2bNqn6PJklsYXp0hYly7L01ltv2VrH1bRq1UrLly/32Fr02LFjV2wNv1RKn08yC/OnV+Li7xMmTMjQezZq1EhlypTRp59+qlmzZqlZs2YewyJ8fX3lcrk8lh7bs2ePvvnmmzTXXKdOHRUtWlSTJk1SXFyc+/j06dOTfW9T+pn9+eefWr58ucd5iaslpOZ7n/i9vvxn9MYbb0hSmmfup1Za/o4vX3orKChIFSpUcC8FdebMGZ07d87jnPLly6tAgQLJlosC7ELLJ3K1Dz/8MNnajpL0xBNPZOh9mzVrpr59+yoqKkrr1q3Tbbfdprx582rHjh2aPXu23nrrLd13331XfQ9/f3/NnTtXPXr0UP369fXTTz/phx9+0LPPPnvVbvsXX3xR8+bNU+PGjfXYY48pT548ev/993X+/HmP7tGIiAj5+vpq7NixiomJkZ+fn26++WYVK1YsxfcdN26cWrdurQYNGqh3797upZZCQkJs35O6cuXKKl++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XGa7AwAAr3Dw4EH3/VmzZmnEiBHatm2b+1hQUJD7vmVZio+PV548144yRYsWTVMd+fLlU/HixdP0GqQeLZ8AAMArFC9e3H0LCQmRy+VyP966dasKFCign376SZGRkfLz89OSJUu0c+dO3X333QoLC1NQUJDq1q2r+fPne7zv5d3uLpdLH3zwgdq3b6/AwEBVrFhR3333nfv5y1skp0+froIFC+rnn39WlSpVFBQUpNtvv90jLF+8eFEDBgxQwYIFFRoaqiFDhqhHjx5q165dun8ex48fV/fu3VWoUCEFBgaqdevW2rFjh/v5vXv3qm3btipUqJDy58+vatWq6ccff3S/tmvXripatKgCAgJUsWJFTZs2Ld21ZCbCJwAAuYFlSadPO3PLxJ28hw4dqldeeUVbtmxRjRo1dOrUKbVp00YLFizQ2rVrdfvtt6tt27bat2/fVd9n9OjR6tixo/766y+1adNGXbt21bFjx654/pkzZ/Taa6/pk08+0aJFi7Rv3z49/fTT7ufHjh2rzz77TNOmTdPSpUsVGxurb775JkOftWfPnlq1apW+++47LV++XJZlqU2bNu5ljh5//HGdP39eixYt0oYNGzR27Fh36/Dw4cO1efNm/fTTT9qyZYvee+89FSlSJEP1ZBa63QEAyA3OnJEu6ba21alTUv78mfJWL7zwgm699Vb348KFC6tmzZrux2PGjNGcOXP03XffqV+/fld8n549e6pz586SpJdfflkTJkzQihUrdPvtt6d4/oULFzRp0iSVL19ektSvXz+98MIL7ufffvttDRs2TO3bt5ckTZw40d0KmR47duzQd999p6VLl6phw4aSpM8++0zh4eH65ptv1KFDB+3bt0/33nuvqlevLkkqV66c+/X79u1TrVq1VKdOHUmm9ddb0PIJAACyjcQwlejUqVN6+umnVaVKFRUsWFBBQUHasmXLNVs+a9So4b6fP39+BQcHu7eOTElgYKA7eEpme8nE82NiYhQdHa169eq5n/f19VVkZGSaPtultmzZojx58qh+/fruY6Ghobrhhhu0ZcsWSdKAAQP04osvqlGjRho5cqT++usv97mPPvqoZs6cqYiICD3zzDNatmxZumvJbIRPAAByg8BA0wLpxC0Td1nKf1kL6tNPP605c+bo5Zdf1uLFi7Vu3TpVr15dcXFxV32fvHnzejx2uVxKSEhI0/lWJg4nSI8+ffpo165d6tatmzZs2KA6dero7bffliS1bt1ae/fu1ZNPPqkDBw7olltu8Rgm4CTCJwAAuYHLZbq+nbhl4S5LS5cuVc+ePdW+fXtVr15dxYsX1549e7LseikJCQlRWFiYVq5c6T4WHx+vNWvWpPs9q1SpoosXL+rPP/90Hzt69Ki2bdumqlWruo+Fh4frkUce0ddff62nnnpKU6ZMcT9XtGhR9ejRQ59++qnGjx+vyZMnp7uezMSYTwAAkG1VrFhRX3/9tdq2bSuXy6Xhw4dftQUzq/Tv319RUVGqUKGCKleurLffflvHjx9P1XaUGzZsUIECBdyPXS6XatasqbvvvlsPPfSQ3n//fRUoUEBDhw5VqVKldPfdd0uSBg4cqNatW6tSpUo6fvy4Fi5cqCpVqkiSRowYocjISFWrVk3nz5/X999/737OaYRPAACQbb3xxht68MEH1bBhQxUpUkRDhgxRbGys7XUMGTJEhw4dUvfu3eXr66uHH35YrVq1kq+v7zVf27RpU4/Hvr6+unjxoqZNm6YnnnhCd955p+Li4tS0aVP9+OOP7iEA8fHxevzxx/XPP/8oODhYt99+u958801JZq3SYcOGac+ePQoICFCTJk00c+bMzP/g6eCynB6wkAqxsbEKCQlRTEyMgoODnS4HAACvd+7cOe3evVtly5aVv7+/0+XkOgkJCapSpYo6duyoMWPGOF1Oprna9yq1eY2WTwAAgAzau3evfvnlFzVr1kznz5/XxIkTtXv3bnXp0sXp0rwOE44AAAAyyMfHR9OnT1fdunXVqFEjbdiwQfPnz/eacZbehJZPAACADAoPD9fSpUudLiNboOUTAAAAtiF8AgAAwDaETwAAANiG8AkAAADbED4BAABgG8InAAAAbEP4BAAAOUrz5s01cOBA9+MyZcpo/PjxV32Ny+XSN998k+FrZ9b7XM2oUaMUERGRpdfISoRPAADgFdq2bavbb789xecWL14sl8ulv/76K83vu3LlSj388MMZLc/DlQLgwYMH1bp160y9Vk5D+AQAAF6hd+/emjdvnv75559kz02bNk116tRRjRo10vy+RYsWVWBgYGaUeE3FixeXn5+fLdfKrgifAADAK9x5550qWrSopk+f7nH81KlTmj17tnr37q2jR4+qc+fOKlWqlAIDA1W9enV9/vnnV33fy7vdd+zYoaZNm8rf319Vq1bVvHnzkr1myJAhqlSpkgIDA1WuXDkNHz5cFy5ckCRNnz5do0eP1vr16+VyueRyudw1X97tvmHDBt18880KCAhQaGioHn74YZ06dcr9fM+ePdWuXTu99tprKlGihEJDQ/X444+7r5UaCQkJeuGFF3TdddfJz89PERERmjt3rvv5uLg49evXTyVKlJC/v79Kly6tqKgoSZJlWRo1apSuv/56+fn5qWTJkhowYECqr50ebK8JAEAuYFnSmTPOXDswUHK5rn1enjx51L17d02fPl3PPfecXP//otmzZys+Pl6dO3fWqVOnFBkZqSFDhig4OFg//PCDunXrpvLly6tevXrXvEZCQoLuuecehYWF6c8//1RMTIzH+NBEBQoU0PTp01WyZElt2LBBDz30kAoUKKBnnnlGnTp10saNGzV37lzNnz9fkhQSEpLsPU6fPq1WrVqpQYMGWrlypQ4fPqw+ffqoX79+HgF74cKFKlGihBYuXKi///5bnTp1UkREhB566KFr/9AkvfXWW3r99df1/vvvq1atWvrwww911113adOmTapYsaImTJig7777Tl988YWuv/567d+/X/v375ckffXVV3rzzTc1c+ZMVatWTYcOHdL69etTdd10s7KBmJgYS5IVExPjdCkAAGQLZ8+etTZv3mydPXvWsizLOnXKskwEtf926lTq696yZYslyVq4cKH7WJMmTawHHnjgiq+54447rKeeesr9uFmzZtYTTzzhfly6dGnrzTfftCzLsn7++WcrT5481r///ut+/qeffrIkWXPmzLniNcaNG2dFRka6H48cOdKqWbNmsvMufZ/JkydbhQoVsk5d8gP44YcfLB8fH+vQoUOWZVlWjx49rNKlS1sXL150n9OhQwerU6dOV6zl8muXLFnSeumllzzOqVu3rvXYY49ZlmVZ/fv3t26++WYrISEh2Xu9/vrrVqVKlay4uLgrXu9Sl3+vLpXavEa3e0oOH5bWrXO6CgAAcp3KlSurYcOG+vDDDyVJf//9txYvXqzevXtLkuLj4zVmzBhVr15dhQsXVlBQkH7++Wft27cvVe+/ZcsWhYeHq2TJku5jDRo0SHberFmz1KhRIxUvXlxBQUF6/vnnU32NS69Vs2ZN5c+f332sUaNGSkhI0LZt29zHqlWrJl9fX/fj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P/20ZFmOlgMAAJBahM/s6sUXJX9/afFis/UmAABANpCu8PnOO++oTJky8vf3V/369bXiGl2/48eP1w033KCAgACFh4frySef1Llz59JVMP7fdddJTz5p7g8ZIl244Gw9AAAAqZDm8Dlr1iwNGjRII0eO1Jo1a1SzZk21atVKhw8fTvH8GTNmaOjQoRo5cqS2bNmiqVOnatasWXqWyTIZN2SIVKSItG2b9MEHTlcDAABwTWkOn2+88YYeeugh9erVS1WrVtWkSZMUGBioDz/8MMXzly1bpkaNGqlLly4qU6aMbrvtNnXu3PmaraVIhZAQaeRIc3/UKOnkSUfLAQAAuJY0hc+4uDitXr1aLVu2THoDHx+1bNlSy5cvT/E1DRs21OrVq91hc9euXfrxxx/Vpk2bK17n/Pnzio2N9bjZacUKaf16Wy+Zfn37ShUrSocPJ60BCgAA4KXSFD6PHDmi+Ph4hYWFeRwPCwvToUOHUnxNly5d9MILL6hx48bKmzevypcvr+bNm1+12z0qKkohISHuW3h4eFrKzJAFC6RmzaS2baUrfCTvkjevNHasuf/669K//zpbDwAAwFVk+Wz33377TS+//LLeffddrVmzRl9//bV++OEHjUncpzwFw4YNU0xMjPu2f//+rC7TrXZt6frrpf37pfbtpWwxL6pdO6lRI+nsWWn4cKerAQAAuKI0hc8iRYrI19dX0dHRHsejo6NVvHjxFF8zfPhwdevWTX369FH16tXVvn17vfzyy4qKilJCQkKKr/Hz81NwcLDHzS6FCknff2/++ccf0oMPZoNlNF0u6bXXzP3p06W//nK0HAAAgCtJU/jMly+fIiMjtWDBAvexhIQELViwQA0aNEjxNWfOnJGPj+dlfH19JUmWl6a6ihWlL7+U8uSRPv9ceuklpytKhZtukjp0MEn5mWecrgYAACBFae52HzRokKZMmaKPPvpIW7Zs0aOPPqrTp0+rV69ekqTu3btr2LBh7vPbtm2r9957TzNnztTu3bs1b948DR8+XG3btnWHUG90883SxInm/vDh0uzZztaTKlFRZgzozz9L8+Y5XQ0AAEAyedL6gk6dOum///7TiBEjdOjQIUVERGju3LnuSUj79u3zaOl8/vnn5XK59Pzzz+vff/9V0aJF1bZtW72UDZoT+/aVtmyR3npL6tFDKltWqlPH6aqu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uOMOzZw5U6tWrdLkyZMz95MAAADA66U5fHbq1En//fefRowYoUOHDikiIkJz5851Tyrat2+ffHySGlQbNmyoGTNm6Pnnn9ezzz6rihUr6ptvvtGNN96YeZ8ik/n5+WnkyJHJuv6Rc/E7z334nedO/N5zH37n3ifN63wCAAAA6cXe7gAAALAN4RMAAAC2IXwCAADANoRPAAAA2IbweZl33nlHZcqUkb+/v+rXr68VK1Y4XRKyUFRUlOrWrasCBQqoWLFiateunbZt2+Z0WbDRK6+8IpfLpYEDBzpdCrLQv//+qwceeEChoaEKCAhQ9erVtWrVKqfLQhaJj4/X8OHDVbZsWQUEBKh8+fIaM2bMNfcchz0In5eYNWuWBg0apJEjR2rNmjWqWbOmWrVqpcOHDztdGrLI77//rscff1x//PGH5s2bpwsXLui2227T6dOnnS4NNli5cqXef/991ahRw+lSkIWOHz+uRo0aKW/evPrpp5+0efNmvf766ypUqJDTpSGLjB07Vu+9954mTpyoLVu2aOzYsXr11Vf19ttvO10axFJLHurXr6+6detq4sSJkszuTeHh4erfv7+GDh3qcHWww3///adixYrp999/V9OmTZ0uB1no1KlTql27tt599129+OKLioiI0Pjx450uC1lg6NChWrp0qRYvXux0KbDJnXfeqbCwME2dOtV97N5771VAQIA+/fRTByuDRMunW1xcnFavXq2WLVu6j/n4+Khly5Zavny5g5XBTjExMZKkwoULO1wJstrjjz+uO+64w+NvHjnTd999pzp16qhDhw4qVqyYatWqpSlTpjhdFrJQw4YNtWDBAm3fvl2StH79ei1ZskStW7d2uDJI6djhKKc6cuSI4uPj3Ts1JQoLC9PWrVsdqgp2SkhI0MCBA9WoUSOv3oELGTdz5kytWbNGK1eudLoU2GDXrl167733NGjQID377LNauXKlBgwYoHz58qlHjx5Ol4csMHToUMXGxqpy5cry9fVVfHy8XnrpJXXt2tXp0iDCJ+D2+OOPa+PGjVqyZInTpSAL7d+/X0888YTmzZsnf39/p8uBDRISElSnTh29/PLLkqRatWpp48aNmjRpEuEzh/riiy/02WefacaMGapWrZrWrVungQMHqmTJkvzOvQDh8/8VKVJEvr6+io6O9jgeHR2t4sWLO1QV7NKvXz99//33WrRoka677jqny0EWWr16tQ4fPqzatWu7j8XHx2vRokWaOHGizp8/L19fXwcrRGYrUaKEqlat6nGsSpUq+uqrrxyqCFlt8ODBGjp0qO6//35JUvXq1bV3715FRUURPr0AYz7/X758+RQZGakFCxa4jyUkJGjBggVq0KCBg5UhK1mWpX79+mnOnDn69ddfVbZsWadLQha75ZZbtGHDBq1bt859q1Onjrp27ap169YRPHOgRo0aJVtCbfv27SpdurRDFSGrnTlzRj4+nhHH19dXCQkJDlWES9HyeYlBgwapR48eqlOnjurVq6fx48fr9OnT6tWrl9OlIYs8/vjjmjFjhr799lsVKFBAhw4dkiSFhIQoICDA4eqQFQoUKJBsTG/+/PkVGhrKWN8c6sknn1TDhg318ssvq2PHjlqxYoUmT56syZMnO10askjbtm310ksv6frrr1e1atW0du1avfHGG3rwwQedLg1iqaVkJk6cqHHjxunQoUOKiIjQhAkTVL9+fafLQhZxuVwpHp82bZp69uxpbzFwTPPmzVlqKYf7/vvvNWzYMO3YsUNly5bVoEGD9NBDDzldFrLIyZMnNXz4cM2ZM0eHDx9WyZIl1blzZ40YMUL58uVzurxcj/AJAAAA2zDmEwAAALYhfAIAAMA2hE8AAADYhvAJAAAA2xA+AQAAYBvCJwAAAGxD+AQAAIBtCJ8AAACwDeETAAAAtiF8AgAAwDaETwAAANiG8AkAAADb/B+NMbIg2ZTrCQAAAABJRU5ErkJggg==\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["def visualization():\n","    import pandas as pd\n","    df = pd.DataFrame(history_fine.history)\n","    #loss plots\n","    plt.figure(figsize=(8,8))\n","    plt.plot(df['loss'], color='red', label = \"Training_loss\")\n","    plt.plot(df['val_loss'], color='blue')\n","    plt.legend(['Training Loss','Validation loss'],loc = 'best' )\n","    plt.title('Line plot of Training and Validation loss')\n","    plt.ylim(0,1)\n","    plt.show()\n","\n","    #accuracy plots\n","    plt.figure(figsize=(8,8))\n","    plt.plot(df['accuracy'], color='red')\n","    plt.plot(df['val_accuracy'], color='blue')\n","    plt.legend(['Training acc','Validation acc'],loc = 'best' )\n","    plt.title('Line plot of Training and Validation Accuracies')\n","    plt.ylim(0,1)\n","    plt.show()\n","\n","visualization()"],"id":"VIV_LOPybQWa"},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","# read a titanic.csv file\n","# from seaborn library\n","x=['Normal', 'Glioma', 'Meningioma', 'Pitituary']\n","y=[]\n","# class v / s fare barplot\n","sns.barplot(x = x, y = y, palette = 'magma')\n","\n","plt.xlabel('Type of Tumors')\n","plt.ylabel('False Predictions Numbers of Tumors')\n","plt.title('False Prediction Numbers for ResNet50')\n","\n","# Show the plot\n","plt.show()"],"metadata":{"id":"FFq6V_2s2qxJ"},"id":"FFq6V_2s2qxJ","execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8756be45","executionInfo":{"status":"ok","timestamp":1705716384921,"user_tz":420,"elapsed":13,"user":{"displayName":"ani sat","userId":"02985735554015643274"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"3e37a682-eeed-415d-ffb2-9d63678e322b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Training Accuracy:  [0.6133819818496704, 0.6992092728614807, 0.7298662066459656, 0.7602798342704773, 0.7782238721847534, 0.7896593809127808, 0.7992700934410095, 0.8130170106887817, 0.8217153549194336, 0.8298661708831787]\n","Validation Accuracy:  [0.6537036895751953, 0.7250000238418579, 0.7583333253860474, 0.7712963223457336, 0.7967592477798462, 0.7907407283782959, 0.7851851582527161, 0.8074073791503906, 0.8152777552604675, 0.8148148059844971]\n","Training Loss:  [0.932367205619812, 0.7479872703552246, 0.6725710034370422, 0.6060168743133545, 0.5661315321922302, 0.5274615287780762, 0.5038159489631653, 0.4774424135684967, 0.45349183678627014, 0.4333067834377289]\n","Validation Loss:  [0.799392819404602, 0.6780825257301331, 0.6178436279296875, 0.5933794975280762, 0.5254124402999878, 0.5239284634590149, 0.5037379264831543, 0.4947071671485901, 0.4576478600502014, 0.4568151533603668]\n","best model accuracy:  0.8148148059844971\n"]}],"source":["\n","# Import numpy for calculating best model accuracy\n","import numpy as np\n","# Populating matrics -> accuracy & loss\n","acc = history_fine.history['accuracy']\n","val_acc = history_fine.history['val_accuracy']\n","\n","loss = history_fine.history['loss']\n","val_loss = history_fine.history['val_loss']\n","\n","print('Training Accuracy: ', acc)\n","print('Validation Accuracy: ', val_acc)\n","print('Training Loss: ', loss)\n","print('Validation Loss: ', val_loss)\n","best_model_accuracy = history_fine.history['val_accuracy'][np.argmin(history_fine.history['val_loss'])]\n","print('best model accuracy: ', best_model_accuracy)\n"],"id":"8756be45"},{"cell_type":"code","execution_count":null,"metadata":{"id":"4c863fdc"},"outputs":[],"source":["def seperate_labels(generator):\n","    x_validation = []\n","    y_validation = []\n","    num_seen = 0\n","\n","    for x, labels in generator:\n","        x_validation.append(x)\n","        y_validation.append([argmax(label) for label in labels])\n","        num_seen += len(x)\n","        if num_seen == generator.n: break\n","\n","    x_validation = np.concatenate(x_validation)\n","    y_validation = np.concatenate(y_validation)\n","    return x_validation, y_validation\n"],"id":"4c863fdc"},{"cell_type":"code","execution_count":null,"metadata":{"id":"a650757c","executionInfo":{"status":"ok","timestamp":1705716407066,"user_tz":420,"elapsed":22150,"user":{"displayName":"ani sat","userId":"02985735554015643274"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"bdfc2ea9-afa5-45c4-950d-d45faf6739c5"},"outputs":[{"output_type":"stream","name":"stdout","text":["68/68 [==============================] - 7s 98ms/step\n"]}],"source":["\n","# Calculate and display the confusion matrix\n","import matplotlib.pyplot as plt\n","from numpy.core.fromnumeric import argmax\n","from sklearn.metrics import ConfusionMatrixDisplay\n","\n","x_validation, y_validation = seperate_labels(validation_generator)\n","y_pred = model.predict(x_validation, batch_size=BATCH_SIZE)\n","predictions = np.apply_along_axis(argmax, 1, y_pred)\n","display_labels = validation_generator.class_indices.keys()\n","\n","# ConfusionMatrixDisplay.from_predictions(y_validation, predictions, display_labels=display_labels, cmap=\"binary\")\n","# plt.show()\n"],"id":"a650757c"},{"cell_type":"code","execution_count":null,"metadata":{"id":"0hlIInn6bhOE","executionInfo":{"status":"ok","timestamp":1705716408071,"user_tz":420,"elapsed":1031,"user":{"displayName":"ani sat","userId":"02985735554015643274"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"147fc6a3-b1f7-4ded-f707-c93852dcfe0b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAwkAAANECAYAAAD7XWM+AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAACCMUlEQVR4nOzdd3gU1dvG8XsDKSQhjZJQQ+9VUAlIkya9KqBCUCwoPaiIdFCDKCCIioWmIlZQAaU3gShIkSIgPZSQADF0Qkj2/YOX/TEmSDIZsln4frjmurJnzsw+u1k2++x5zhmb3W63CwAAAAD+n5uzAwAAAACQvZAkAAAAADAgSQAAAABgQJIAAAAAwIAkAQAAAIABSQIAAAAAA5IEAAAAAAYkCQAAAAAMSBIAAAAAGJAkALhr7Nu3T02bNpW/v79sNpt++OEHS89/+PBh2Ww2zZo1y9LzurIGDRqoQYMGzg4DAGAxkgQAljpw4ICef/55lShRQl5eXvLz81OdOnU0efJkXb58+Y7ed3h4uHbs2KE33nhDn3/+uWrWrHlH7y8r9ejRQzabTX5+fmk+j/v27ZPNZpPNZtM777yT4fOfOHFCo0aN0rZt2yyIFgDg6nI6OwAAd49Fixbp0Ucflaenp7p3765KlSrp6tWrWrdunV5++WXt2rVLH3/88R2578uXLysqKkpDhw5Vnz597sh9hIaG6vLly3J3d78j57+dnDlz6tKlS1qwYIEee+wxw745c+bIy8tLV65cMXXuEydOaPTo0SpWrJiqVauW7uOWLl1q6v4AANkbSQIASxw6dEhdunRRaGioVq5cqQIFCjj29e7dW/v379eiRYvu2P2fOnVKkhQQEHDH7sNms8nLy+uOnf92PD09VadOHc2dOzdVkvDll1+qZcuW+v7777MklkuXLsnb21seHh5Zcn8AgKxFuREAS4wfP14XLlzQ9OnTDQnCDaVKlVL//v0dt69du6axY8eqZMmS8vT0VLFixfTaa68pMTHRcFyxYsXUqlUrrVu3Tg888IC8vLxUokQJffbZZ44+o0aNUmhoqCTp5Zdfls1mU7FixSRdL9O58fPNRo0aJZvNZmhbtmyZHnroIQUEBMjX11dly5bVa6+95th/qzkJK1euVN26deXj46OAgAC1bdtWu3fvTvP+9u/frx49eiggIED+/v566qmndOnSpVs/sf/y+OOP65dfflFCQoKjbdOmTdq3b58ef/zxVP3j4+P10ksvqXLlyvL19ZWfn5+aN2+uP//809Fn9erVuv/++yVJTz31lKNs6cbjbNCggSpVqqTNmzerXr168vb2djwv/56TEB4eLi8vr1SPv1mzZgoMDNSJEyfS/VgBAM5DkgDAEgsWLFCJEiVUu3btdPV/5plnNGLECN13332aNGmS6tevr8jISHXp0iVV3/3796tTp05q0qSJJkyYoMDAQPXo0UO7du2SJHXo0EGTJk2SJHXt2lWff/653n333QzFv2vXLrVq1UqJiYkaM2aMJkyYoDZt2mj9+vX/edzy5cvVrFkzxcXFadSoUYqIiNCGDRtUp04dHT58OFX/xx57TOfPn1dkZKQee+wxzZo1S6NHj053nB06dJDNZtO8efMcbV9++aXKlSun++67L1X/gwcP6ocfflCrVq00ceJEvfzyy9qxY4fq16/v+MBevnx5jRkzRpL03HPP6fPPP9fnn3+uevXqOc5z5swZNW/eXNWqVdO7776rhg0bphnf5MmTlS9fPoWHhys5OVmS9NFHH2np0qV67733VLBgwXQ/VgCAE9kBIJPOnj1rl2Rv27Ztuvpv27bNLsn+zDPPGNpfeukluyT7ypUrHW2hoaF2Sfa1a9c62uLi4uyenp72QYMGOdoOHTpkl2R/++23DecMDw+3h4aGpoph5MiR9pvfAidNmmSXZD916tQt475xHzNnznS0VatWzZ4/f377mTNnHG1//vmn3c3Nzd69e/dU9/f0008bztm+fXt7njx5bnmfNz8OHx8fu91ut3fq1MneqFEju91utycnJ9tDQkLso0ePTvM5uHLlij05OTnV4/D09LSPGTPG0bZp06ZUj+2G+vXr2yXZp02blua++vXrG9qWLFlil2R//fXX7QcPHrT7+vra27Vrd9vHCADIPhhJAJBp586dkyTlzp07Xf1//vlnSVJERIShfdCgQZKUau5ChQoVVLduXcftfPnyqWzZsjp48KDpmP/txlyGH3/8USkpKek6JiYmRtu2bVOPHj0UFBTkaK9SpYqaNGnieJw369Wrl+F23bp1debMGcdzmB6PP/64Vq9erZMnT2rlypU6efJkmqVG0vV5DG5u19/qk5OTdebMGUcp1ZYtW9J9n56ennrqqafS1bdp06Z6/vnnNWbMGHXo0EFeXl766KOP0n1fAADnI0kAkGl+fn6SpPPnz6er/5EjR+Tm5qZSpUoZ2kNCQhQQEKAjR44Y2osWLZrqHIGBgfrnn39MRpxa586dVadOHT3zzDMKDg5Wly5d9M033/xnwnAjzrJly6baV758eZ0+fVoXL140tP/7sQQGBkpShh5LixYtlDt3bn399deaM2eO7r///lTP5Q0pKSmaNGmSSpcuLU9PT+XNm1f58uXT9u3bdfbs2XTfZ6FChTI0Sfmdd95RUFCQtm3bpilTpih//vzpPhYA4HwkCQAyzc/PTwULFtTOnTszdNy/Jw7fSo4cOdJst9vtpu/jRr38Dbly5dLatWu1fPlydevWTdu3b1fnzp3VpEmTVH0zIzOP5QZPT0916NBBs2fP1vz58285iiBJb775piIiIlSvXj198cUXWrJkiZYtW6aKFSume8REuv78ZMTWrVsVFxcnSdqxY0eGjgUAOB9JAgBLtGrVSgcOHFBUVNRt+4aGhiolJUX79u0ztMfGxiohIcGxUpEVAgMDDSsB3fDv0QpJcnNzU6NGjTRx4kT99ddfeuONN7Ry5UqtWrUqzXPfiHPv3r2p9u3Zs0d58+aVj49P5h7ALTz++OPaunWrzp8/n+Zk7xu+++47NWzYUNOnT1eXLl3UtGlTNW7cONVzkt6ELT0uXryop556ShUqVNBzzz2n8ePHa9OmTZadHwBw55EkALDEK6+8Ih8fHz3zzDOKjY1Ntf/AgQOaPHmypOvlMpJSrUA0ceJESVLLli0ti6tkyZI6e/astm/f7miLiYnR/PnzDf3i4+NTHXvjomL/Xpb1hgIFCqhatWqaPXu24UP3zp07tXTpUsfjvBMaNmyosWPHaurUqQoJCbllvxw5cqQapfj22291/PhxQ9uNZCathCqjBg8erOjoaM2ePVsTJ05UsWLFFB4efsvnEQCQ/XAxNQCWKFmypL788kt17txZ5cuXN1xxecOGDfr222/Vo0cPSVLVqlUVHh6ujz/+WAkJCapfv742btyo2bNnq127drdcXtOMLl26aPDgwWrfvr369eunS5cu6cMPP1SZMmUME3fHjBmjtWvXqmXLlgoNDVVcXJw++OADFS5cWA899NAtz//222+refPmCgsLU8+ePXX58mW999578vf316hRoyx7HP/m5uamYcOG3bZfq1atNGbMGD31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AAAADCg3AgAAgOuj3shSjCQAAAAAMCBJAAAAAGBAuREAAABcno16I0sxkgAAAADAgCQBAAAAgAHlRgAAAHB5NqqNLMVIAgAAAAADkgQAAAAABja73W53dhDIuMTEREVGRmrIkCHy9PR0dji4i/FaQ1bhtYaswmsNuD2SBBd17tw5+fv76+zZs/Lz83N2OLiL8VpDVuG1hqzCaw24PcqNAAAAABiQJAAAAAAwIEkAAAAAYECS4KI8PT01cuRIJlzhjuO1hqzCaw1ZhdcacHtMXAYAAABgwEgCAAAAAAOSBAAAAAAGJAkAAAAADEgSkMrq1atls9mUkJDg7FDuOcWKFdO7777ruG2z2fTDDz84LR7c/e7Ea2zUqFGqVq2apedE9vfv9y+zGjRooAEDBmT6PAAyhyThDuvRo4dsNpvGjRtnaP/hhx9ks9mcFBVcRUxMjJo3b+7sMP4THwhd2514jb300ktasWKFpee8E0jCrbVp0yY999xzjttmn9958+Zp7NixjttWJR9WIIHBvYQkIQt4eXnprbfe0j///GPZOa9evWrZuZB9hYSEsERfJtntdl27ds3ZYWRbd+I15uvrqzx58lh6znuRq73P58uXT97e3pk+T1BQkHLnzm1BREau9nyacS88RmQdkoQs0LhxY4WEhCgyMvKWfb7//ntVrFhRnp6eKlasmCZMmGDYX6xYMY0dO1bdu3eXn5+fnnvuOc2aNUsBAQFauHChypYtK29vb3Xq1EmXLl3S7NmzVaxYMQUGBqpfv35KTk52nOvzzz9XzZo1lTt3boWEhOjxxx9XXFzcHXv8+J/z58/riSeekI+PjwoUKKBJkyb95zdT//4mbseOHXr44YeVK1cu5cmTR88995wuXLjg2N+jRw+1a9dOb775poKDgxUQEKAxY8bo2rVrevnllxUUFKTChQtr5syZhvsZPHiwypQpI29vb5UoUULDhw9XUlLSbR/PrFmzNHr0aP3555+y2Wyy2WyaNWuWDh8+LJvNpm3btjn6JiQkyGazafXq1ZL+V9a2ZMkSVa9eXbly5dLDDz+suLg4/fLLLypfvrz8/Pz0+OOP69KlS47zJCYmql+/fsqfP7+8vLz00EMPadOmTY79N877yy+/qEaNGvL09NS6detu+1icrUGDBurbt68GDBigwMBABQcH65NPPtHFixf11FNPKXfu3CpVqpR++eUXxzE7d+5U8+bN5evrq+DgYHXr1k2nT582nLNfv3565ZVXFBQUpJCQEI0aNcpwvze/xm783ubNm6eGDRvK29tbVatWVVRUlOGYTz75REWKFJG3t7fat2+viRMnKiAgwLH/36NLKSkpGjNmjAoXLixPT09Vq1ZNixcvduy/cb/ffPON6tatq1y5cun+++/X33//rU2bNqlmzZry9fVV8+bNderUKcdxmzZtUpMmTZQ3b175+/urfv362rJlS7qe72LFikmS2rdvL5vN5rh94//QzQYMGKAGDRoYnteM/q4kac2aNXrggQfk6empAgUK6NVXXzUksA0aNFCfPn00YMAA5c2bV82aNUvXY8kqN+Lr06eP/P39lTdvXg0fPlw3VlK/+Rv/zD6/N94TGzRooCNHjmjgwIGO9xhJOnPmjLp27apChQrJ29tblStX1ty5c9OM9+bn8+mnn1arVq0M/ZKSkpQ/f35Nnz79Px9/jx49tGbNGk2ePNkRy+HDhx1/i2/272qBG/8nZsyYoaJFi8rX11cvvviikpOTNX78eIWEhCh//vx64403DOeJjo5W27Zt5evrKz8/Pz322GOKjY1Ndd5PP/1UxYsXl5eX138+BiAjSBKyQI4cOfTmm2/qvffe07Fjx1Lt37x5sx577DF16dJFO3bs0KhRozR8+HDNmjXL0O+dd95R1apVtXXrVg0fPlySdOnSJU2ZMkVfffWVFi9erNWrV6t9+/b6+eef9fPPP+vzzz/XRx99pO+++85xnqSkJI0dO1Z//vmnfvjhBx0+fFg9evS4k08B/l9ERITWr1+vn376ScuWLdOvv/6a7g81Fy9eVLNmzRQYGKhNmzbp22+/1fLly9WnTx9Dv5UrV+rEiRNau3atJk6cqJEjR6pVq1YKDAzU77//rl69eun55583vBZz586tWbNm6a+//tLkyZP1ySefaNKkSbeNqXPnzho0aJAqVqyomJgYxcTEqHPnzhl6TkaNGqWpU6dqw4YNOnr0qB577DG9++67+vLLL7Vo0SItXbpU7733nqP/K6+8ou+//16zZ8/Wli1bVKpUKTVr1kzx8fGG87766qsaN26cdu/erSpVqmQoJmeZPXu28ubNq40bN6pv37564YUX9Oijj6p27drasmWLmjZtqm7duunSpUtKSEjQww8/rOrVq+uPP/7Q4sWLFRsbq8ceeyzVOX18fPT7779r/PjxGjNmjJYtW/afcQwdOlQvvfSStm3bpjJlyqhr166OD7Pr169Xr1691L9/f23btk1NmjRJ9cHm3yZPnqwJEybonXfe0fbt29WsWTO1adNG+/btM/QbOXKkhg0bpi1btihnzpx6/PHH9corr2jy5Mn69ddftX//fo0YMcLR//z58woPD9e6dev022+/qXTp0mrRooXOnz9/2+f6RmI5c+ZMxcTEGBLN9MjI70qSjh8/rhYtWuj+++/Xn3/+qQ8//FDTp0/X66+/nuq8Hh4eWr9+vaZNm5ahmLLC7NmzlTNnTm3cuFGTJ0/WxIkT9emnn6bql9nn94Z58+apcOHCGjNmjOM9RpKuXLmiGjVqaNGiRdq5c6eee+45devWTRs3bkwV783P5zPPPKPFixc7ziNJCxcu1KVLl2773jV58mSFhYXp2WefdcRSpEiRdD+WAwcO6JdfftHixYs1d+5cTZ8+XS1bttSxY8e0Zs0avfXWWxo2bJh+//13SdeT67Zt2yo+Pl5r1qzRsmXLdPDgwVRx7t+/X99//73mzZtn+GIGyDQ77qjw8HB727Zt7Xa73V6rVi37008/bbfb7fb58+fbbzz9jz/+uL1JkyaG415++WV7hQoVHLdDQ0Pt7dq1M/SZOXOmXZJ9//79jrbnn3/e7u3tbT9//ryjrVmzZvbnn3/+ljFu2rTJLslxzKpVq+yS7P/880/GHzBu6dy5c3Z3d3f7t99+62hLSEiwe3t72/v372+326//nidNmuTYL8k+f/58u91ut3/88cf2wMBA+4ULFxz7Fy1aZHdzc7OfPHnSbrdff72Fhobak5OTHX3Kli1rr1u3ruP2tWvX7D4+Pva5c+feMta3337bXqNGjXQ9rpEjR9qrVq1qaDt06JBdkn3r1q2Otn/++ccuyb5q1Sq73f6/19ny5csdfSIjI+2S7AcOHHC0Pf/88/ZmzZrZ7Xa7/cKFC3Z3d3f7nDlzHPuvXr1qL1iwoH38+PGG8/7www/pij+7qF+/vv2hhx5y3L7xe+rWrZujLSYmxi7JHhUVZR87dqy9adOmhnMcPXrULsm+d+/eNM9pt9vt999/v33w4MGO2ze/xm783j799FPH/l27dtkl2Xfv3m232+32zp0721u2bGk45xNPPGH39/d33P73a6JgwYL2N954I1UcL7744i3vd+7cuXZJ9hUrVjjaIiMj7WXLlrXfSnJysj137tz2BQsW3LLPzW5+7Dfc/J59Q//+/e3169d33M7o78put9tfe+01e9myZe0pKSmOPu+//77d19fX8f+1fv369urVq6crdmeoX7++vXz58obHMHjwYHv58uXtdvt/v3/dkN7n98Z7YlrnvZWWLVvaBw0aZDhPWs9nhQoV7G+99ZbjduvWre09evS47fnTis1uv/63+ObXv91u/Btvt1//P+Ht7W0/d+6co61Zs2b2YsWKpXq/joyMtNvtdvvSpUvtOXLksEdHRzv23/j/uHHjRsd53d3d7XFxcemKH8gIRhKy0FtvvaXZs2dr9+7dhvbdu3erTp06hrY6depo3759hjKhmjVrpjqnt7e3SpYs6bgdHBysYsWKydfX19B2cznR5s2b1bp1axUtWlS5c+dW/fr1JV0f1sSdc/DgQSUlJemBBx5wtPn7+6ts2bLpOn737t2qWrWqfHx8HG116tRRSkqK9u7d62irWLGi3Nz+9187ODhYlStXdtzOkSOH8uTJY3hNfP3116pTp45CQkLk6+urYcOGZdnr4eZv+YODgx0lTze33Yj1wIEDSkpKMvx/cXd31wMPPJDq/1Va/1+yu5ufixu/p5t/d8HBwZKkuLg4/fnnn1q1apV8fX0dW7ly5SRdf57SOqckFShQ4LblhTcfU6BAAcd9StLevXsNr2FJqW7f7Ny5czpx4kSa73H//p39+7UgKdXjvzn22NhYPfvssypdurT8/f3l5+enCxcuZMlrNyO/K+n6/9+wsDBDCUqdOnV04cIFw6hejRo17nTomVKrVi3DYwgLC0v1tyorJCcna+zYsapcubKCgoLk6+urJUuWpPrdp/V8PvPMM46Sy9jYWP3yyy96+umn73jMxYoVM8y1CA4OVoUKFVK9X9/8milSpIhhtKJChQoKCAgw/N8JDQ1Vvnz57nj8uPeQJGShevXqqVmzZhoyZIip42/+cHiDu7u74bbNZkuzLSUlRdL/Slb8/Pw0Z84cbdq0SfPnz5fEhKe7RUZfE1FRUXriiSfUokULLVy4UFu3btXQoUMz9Xq48UfP/v+1ypJuOcfh5thuF2tGpPX/Jbu73e/uxoezlJQUXbhwQa1bt9a2bdsM2759+1SvXr3/POftns9b3eedltb9/rvt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\n"},"metadata":{}}],"source":["import seaborn as sns\n","from sklearn.metrics import confusion_matrix, classification_report\n","plt.figure(figsize = (10,10))\n","sns.heatmap(confusion_matrix(y_validation, predictions), annot = True, fmt = 'g', cmap = \"Blues\",xticklabels=display_labels, yticklabels=display_labels)\n","plt.title(\"Confusion Matrix\")\n","plt.show()"],"id":"0hlIInn6bhOE"},{"cell_type":"code","execution_count":null,"metadata":{"id":"ek591f4PcMvK","executionInfo":{"status":"ok","timestamp":1705716408072,"user_tz":420,"elapsed":11,"user":{"displayName":"ani sat","userId":"02985735554015643274"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f12a7dc0-0309-48ac-a5cb-ed0bac93aa7a"},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.93      0.83      0.88       306\n","           1       0.75      0.82      0.79       631\n","           2       0.83      0.66      0.73       633\n","           3       0.83      0.97      0.89       590\n","\n","    accuracy                           0.81      2160\n","   macro avg       0.83      0.82      0.82      2160\n","weighted avg       0.82      0.81      0.81      2160\n","\n"]}],"source":["print(classification_report(y_validation, predictions))"],"id":"ek591f4PcMvK"},{"cell_type":"code","execution_count":null,"metadata":{"id":"f13b9f0c","executionInfo":{"status":"error","timestamp":1705716408183,"user_tz":420,"elapsed":118,"user":{"displayName":"ani sat","userId":"02985735554015643274"}},"colab":{"base_uri":"https://localhost:8080/","height":393},"outputId":"7664e1ba-472d-4a20-e48d-d7caffb68c44"},"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '<>'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-13-5dffeae6ef11>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Please replace the brackets below with the location of your image which need to predict\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mimg_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'<>'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mimg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload_img\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtarget_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mIMG_SIZE\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mimg_array\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimg_to_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mimg_batch\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpand_dims\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg_array\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/keras/src/utils/image_utils.py\u001b[0m in \u001b[0;36mload_img\u001b[0;34m(path, grayscale, color_mode, target_size, interpolation, keep_aspect_ratio)\u001b[0m\n\u001b[1;32m    420\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpathlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mPath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    421\u001b[0m             \u001b[0mpath\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresolve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 422\u001b[0;31m         \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"rb\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    423\u001b[0m             \u001b[0mimg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpil_image\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mBytesIO\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    424\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '<>'"]}],"source":["\n","# Predicting code for an image\n","from tensorflow.keras.preprocessing import image\n","# Please replace the brackets below with the location of your image which need to predict\n","img_path = '<>'\n","img = image.load_img(img_path, target_size=IMG_SIZE)\n","img_array = image.img_to_array(img)\n","img_batch = np.expand_dims(img_array, axis=0)\n","img_preprocessed = preprocess_input(img_batch)\n","prediction = model.predict(img_preprocessed)\n","print(prediction)\n"],"id":"f13b9f0c"}],"metadata":{"accelerator":"GPU","colab":{"provenance":[{"file_id":"1GuyavNyhh1mmo01_NmOgBQyV9XkRIX3o","timestamp":1698709765595},{"file_id":"1cGS-XqlelZpoo-WOMa5AhmW3rmi5dI20","timestamp":1685523800067},{"file_id":"1kodshi7IaN_JqtlEsV5bn7WCBqzabNs1","timestamp":1685428949853},{"file_id":"1vtiqe4ChiKErzzE6lvfA-WUPwxH3oS4A","timestamp":1683914875497},{"file_id":"1b_idYmr0JOYT6X2dOsLzw25QB-la8O1t","timestamp":1672650124899},{"file_id":"17_UZwzcmAYzKCE279eaOMAklbbaUZN5H","timestamp":1670891677735},{"file_id":"1Zlv6RFpBOTiXg7rOnEaI_gXIY8H8PgaX","timestamp":1670887583215}]},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":5}